* Zen-mode overview
zen-mode is Emacs is a concentration aid for Emacs.

I bind zen-mode to f11 like this:

(global-set-key [f11] 'zen-set-state)

F11 means full-screen in many applications, and one zen-aspect is
fullscreen.

With zen-mode you bind a set of zen features to a zen state.

Here's the default keybindings:

<f11> l         zen-less
<f11> m         zen-more
<f11> <f11>     zen-set-state

So, normaly you load zen-mode, and nothing happens. Then, when you are
ready to achieve zen, you press <f11> m. Repeat until desired state is
reached. When you want to descend back into the world <f11> l.

** zen aspects
Zen states are created using Emacs themes, so you can bind any
customizable variable value to a zen state. Zen mode adds a couple
of customizable features.

*** zen-fullscreen-mode. 
Enter fullscreen. Applications that are not Emacs are not
Zen. (Although you can cheat and embedded other applications in
Emacs. See the Emacs Xwidget branch)
*** zen-encumbered-urls.
Wordly urls that you can't visit in a Zen state. I use Polipo as a
http proxy, and Emacs creates rules for it using this feature.
*** zen-sound-of-one-hand-clapping. 
A sound of your choosing that helps you achieve Zen. I use a binaural
beat mixed with the sound of the Shinkhansen train.
*** standard Emacs features that Zen can set
Various Emacs decorators that are not Zen:
  '(scroll-bar-mode nil)
  '(menu-bar-mode nil)
  '(tool-bar-mode nil)
  '(mode-line-format nil))

You can use whatever customizable variable you want.

** default zen themes
these are the default zen themes:

*** zen 1
  '(zen-fullscreen-mode t))
*** zen 2
  '(scroll-bar-mode nil)
  '(zen-fullscreen-mode t)
  '(zen-encumbered-urls  (quote ( "#brief timewastes" "www.penny-arcade.com" "www.dilbert.com" "www.xkcd.com" "www.userfriendly.org" "#news waste" "slashdot.org" "dn.se" "#social timewastes" "https://www.facebook.com")))
  '(menu-bar-mode nil)
  '(tool-bar-mode nil)
  '(mode-line-format nil))
*** zen 3
  '(scroll-bar-mode nil)
  '(zen-fullscreen-mode t)
  '(zen-encumbered-urls  (quote ( "#brief timewastes" "www.penny-arcade.com" "www.dilbert.com" "www.xkcd.com" "www.userfriendly.org" "#news waste" "slashdot.org" "dn.se" "#social timewastes" "https://www.facebook.com")))
  '(menu-bar-mode nil)
  '(tool-bar-mode nil)
  '(mode-line-format nil))


** bugs
*** TODO Currently Zen mode cant see the difference between a maximized
 frame and a fullscreen frame. This is because of a limitation in
 Emacs, which will be fixed future-ish. The end result is that
 currently Zen will probably not do what you expect if you enter zen
 while in a maximized frame. 

 doesnt remember previous window size and position always

*** CANCELLED There are some problems in the Compiz WM, (and maybe other WM:s)
    CLOSED: [2011-08-21 Sun 13:50]
 regarding fullscreen: When selecting another workspace temporarily
 and going back, Emacs does not cover the wm panels as it should.
 This can be resolved with alt-tab a bit, but its annoying.  In
 Metacity it works well. Maybe Zen could learn to work around these
 WM:s

(cancelled because it doesn't happen lately)
*** TODO features annoyingly wind up in the user theme
customize troubleshoot
sometimes variables I want in the theme winds up in the customizations.

also custom-enabled-themes gets out of sync:
 '(custom-enabled-themes (quote (zen-2 tsdh-dark)))
so, when emacs is restarted, zen-2 is set, but zen thinks the level
 is 0.

the user-theme has higher precedence than other themes which is counterintuitive.
** new features
*** TODO play trance inducing track with EMMS
I have my 
(emms-play-file
"/home/joakim/build_myprojs/sbagen/examples/jave/ts-brain-delta-nopink.sbg")


*** DONE more states that accumulate
    CLOSED: [2012-06-27 Wed 18:57]
*** DONE zen-more and zen-less
    CLOSED: [2011-03-17 Thu 00:16]
*** DONE Levels of Zen-ness. Quickly enter zen with different
    CLOSED: [2011-03-15 Tue 23:57]
 predetermined settings. (c-u NUMBER m-x zen-mode),
NUMBER is the Zen state. The features for each state is configurable

*** DONE utilize custom-themes
    CLOSED: [2011-03-15 Tue 23:57]
The custom theme code in Emacs 24 is nicely demonstrated by
color-themes. Re-use this facility and scrap Zen:s limited in-built
feature.

themable:
scroll-bar-mode menu-bar-mode tool-bar-mode 

needs work:
frame-mode

"Allow more than one theme at a time"
enable-theme
custom-theme-load-path
customize-create-theme
`:set SETFUNCTION'
custom-theme-visit-theme

although one could have any number of zen-states, I want a couple of
usable defaults.

**** zen-master
3
Zen-master mode, like writeroom mode. 
it turns all distractions off, including modeline.
   (setq mode-line-format nil)
   (setq-default mode-line-format nil)
**** zen-deep
2
no menubor toolbar or scrollbar. fullscreen
**** zen-light
1
maximized
**** zen-wordly
0
    all zen-ness is disabled. 
*** DONE encumbered URLs 
    CLOSED: [2011-03-15 Tue 23:57]
polipoli is a webproxy which has a forbiddenurls feature, which is a
file with regexps of forbidden urls. zen can handle this with
customize. The config file will be
generated and the file reloaded.

each url shall have a zen state. This could possibly be managed as a
theme variable.

a problem is that the configuration and reload requires root
privileges on Fedora(and thus probably many other distributions also) 

/etc/polipo/forbidden 
pgrep polipo|xargs kill -SIGUSR1
service polipo reload


*** TODO support https encumbering
polipo can also encumber https urls but that requires a new file + a
polipo patch entering the polipo repo soonish maybe.
*** TODO encumbered buffers
you can't visit particular buffers, like maybe the Gnus buffers.
*** TODO advice some modes like ERC so as not to
  interrupt while in Zen, also dont Gnus while in Zen. You are
  supposed to concentrate :)

*** TODO procrastination inhibitor. Enter a Zen state  and dont leave until
 youv'e actually produced someting useful. For instance, 15 minutes
 must pass and some useful buffer must grow by a number of bytes
 before you can begin wasting time again.

*** TODO implicit zen state shifting 
lessening neurological procrastenating reward. 

Its easier to describe with an example. You want to Gnus rather than
do whatever more fruitful endeavor you are doing. Gnus is inhibited in
your current zen state. However, you don't need to change zen state
manually to go to a zen state where Gnus is allowed. It is done
automatically. You do, however, have to suffer a synthetic 30 second
delay before arriwing in the Gnus buffer. Zen state is changed
automatically after that. If you quit before the delay expires you
stay in your current zen state.

*** TODO anti procrastenation timer
**** DONE [#B] emacs quick challenge timer against procrastination
   CLOSED: [2009-04-15 Wed]
i had the idea to do this myself but it was already done.
http://www.emacswiki.org/emacs/work-timer.el
depends on todochiku which sends popup msgs with growl, which seemed
to work immediately.

(require 'work-timer)
(require 'todochiku)
(work-timer-start)

**** TODO zen timer/pommodoro timer
     CLOCK: [2012-06-27 Wed 00:55]--[2012-06-27 Wed 01:08] =>  0:13
     CLOCK: [2012-06-26 Tue 20:00]--[2012-06-26 Tue 20:37] =>  0:37
The pommodoro method is very simple. You use an egtimer, and during
the egtimers 25 minute run, you do whatever you are supposed to
do. When the eggtimer rings, you can procrastinate for a while.

I have used this method successfully with Emacs and org-mode for some
time. (there is org-pommodoro.el, but it didnt exist when I started,
but there was a simple Emacs timer example floating around.)

I usually also enter Zen at the same time manually, but this should be
done automaticaly. Also I might not necessarily log all pommodoros in
org, altough neat, there is sometimes no immediately obvious org node
to log time in, which increases the threshold for pommodoro.


*** TODO control erc state
busy in higher states etc

*** TODO integrate with the Neurosky Mindset 
there is an initial attempt with (zen-neurosky)
*** TODO set background colours
so, in high zen, background is red for instance.
*** TODO ELPA package
ELPA packaging would make it easier to install the custom themes.
